
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
// Theme colors inspired by Japanese garden
// Greens and torii red accents
$wellio-primary: mat.define-palette(mat.$green-palette, 700, 300, 900);
$wellio-accent: mat.define-palette(mat.$deep-orange-palette, 700, 400, 900);

// The warn palette is optional (defaults to red).
$wellio-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$wellio-theme: mat.define-light-theme((
  color: (
    primary: $wellio-primary,
    accent: $wellio-accent,
    warn: $wellio-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($wellio-theme);

/* Global styles */

:root {
  --green-strong: #1b5e20;
  --green-light: #66bb6a;
  --torii-red: #c62828;
  --sand-100: #fbf9f4;
  --sand-200: #f3eee4;
  --app-bg: linear-gradient(135deg, #e6f1ff 0%, #effff7 100%);

}

html, body { height: 100%; }
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
  background: var(--app-bg) fixed;
  overflow-y: auto;
}

/* Generic motion and glow utilities */
@keyframes fadeInUp {
  from { opacity: 0; transform: translate3d(0, 8px, 0); }
  to   { opacity: 1; transform: translate3d(0, 0, 0); }
}

.fade-in { animation: fadeInUp .4s ease-out both; }

.glow-surface {
  position: relative;
  box-shadow: 0 8px 26px rgba(2, 6, 23, 0.12);
}
.glow-surface::before {
  content: '';
  position: absolute;
  inset: -20% -10% auto -10%;
  height: 60%;
  background: radial-gradient(60% 60% at 50% 40%, rgba(255,255,255,.28), rgba(255,255,255,0));
  filter: blur(10px);
  pointer-events: none;
}
.glow-surface:hover { box-shadow: 0 16px 40px rgba(2, 6, 23, 0.22); }

/* Simple, reusable motion */
@keyframes fadeInUp {
  from { opacity: 0; transform: translate3d(0, 8px, 0); }
  to { opacity: 1; transform: translate3d(0, 0, 0); }
}

.card {
  animation: fadeInUp .35s ease-out both;
  border-radius: 12px;
}

.dash-glass {background: rgba(15,23,42,0.36); border: 1px solid rgba(255,255,255,0.18); border-radius: 20px; padding: 32px; backdrop-filter: blur(14px) saturate(140%); -webkit-backdrop-filter: blur(14px) saturate(140%); box-shadow: 0 30px 80px rgba(2, 6, 23, 0.35);}